// <auto-generated />
using System;
using IdentityServer.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hosting.Migrations
{
    [DbContext(typeof(IdentityServerDbContext))]
    partial class IdentityServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ApiResourceEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Name");

                    b.ToTable("Api_resources", (string)null);
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ApiScopeEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Name");

                    b.ToTable("Api_scopes", (string)null);
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ClientEntity", b =>
                {
                    b.Property<string>("ClientId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("AccessTokenLifetime")
                        .HasColumnType("int");

                    b.Property<int>("AccessTokenType")
                        .HasColumnType("int");

                    b.Property<int>("AuthorizeCodeLifetime")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientUri")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdentityTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("OfflineAccess")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RefreshTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("RequireSecret")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.IdentityResourceEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Name");

                    b.ToTable("Identity_resources", (string)null);
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.TokenEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Lifetime")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("Tokens", (string)null);
                });

            modelBuilder.Entity("IdentityServer.Models.AuthorizationCodeEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Lifetime")
                        .HasColumnType("int");

                    b.Property<string>("None")
                        .HasColumnType("longtext");

                    b.Property<string>("RedirectUri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseMode")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("Authorization_codes", (string)null);
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ApiResourceEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "AllowedScopes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Api_resource_allowed_scopes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "ClaimTypes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Api_resource_claim_types", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.PropertyEntity", "Properties", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Key")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Api_resource_properties", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.SecretEntity", "Secrets", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Description")
                                .HasColumnType("longtext");

                            b1.Property<DateTime?>("Expiration")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Api_resource_secrets", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("AllowedScopes");

                    b.Navigation("ClaimTypes");

                    b.Navigation("Properties");

                    b.Navigation("Secrets");
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ApiScopeEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "ClaimTypes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Api_scope_claim_types", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("ClaimTypes");
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.ClientEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "AllowedGrantTypes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_allowed_grant_types", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "AllowedRedirectUris", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_allowed_redirect_uris", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "AllowedScopes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_allowed_scopes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "AllowedSigningAlgorithms", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_allowed_signing_algorithms", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.PropertyEntity", "Properties", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Key")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_properties", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("IdentityServer.EntityFramework.Entities.SecretEntity", "Secrets", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Description")
                                .HasColumnType("longtext");

                            b1.Property<DateTime?>("Expiration")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Client_secrets", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("AllowedGrantTypes");

                    b.Navigation("AllowedRedirectUris");

                    b.Navigation("AllowedScopes");

                    b.Navigation("AllowedSigningAlgorithms");

                    b.Navigation("Properties");

                    b.Navigation("Secrets");
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.IdentityResourceEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.StringEntity", "ClaimTypes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Identity_resource_claim_types", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("ClaimTypes");
                });

            modelBuilder.Entity("IdentityServer.EntityFramework.Entities.TokenEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.ClaimEntity", "Claims", b1 =>
                        {
                            b1.Property<string>("OwnerId")
                                .HasColumnType("varchar(100)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Issuer")
                                .HasColumnType("longtext");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("ValueType")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("OwnerId", "Id");

                            b1.ToTable("Token_claims", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Claims");
                });

            modelBuilder.Entity("IdentityServer.Models.AuthorizationCodeEntity", b =>
                {
                    b.OwnsMany("IdentityServer.EntityFramework.Entities.ClaimEntity", "Claims", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Issuer")
                                .HasColumnType("longtext");

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("ValueType")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Authorization_code_claims", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
